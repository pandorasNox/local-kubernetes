
# -*- mode: ruby -*-
# vi: set ft=ruby :

# swapoff provisioning script
$swapoffScript = <<-SCRIPT

# kubelet requires swap off
echo Disable swap...
swapoff -a
# keep swap off after reboot
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
echo ' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
echo '  Done  '
echo ' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
echo ' '

SCRIPT

# This script to install Kubernetes will get executed after we have provisioned the box 
$script = <<-SCRIPT

# whoami
echo whoami: $(whoami)
echo ' '

# Install kubernetes
echo Install kubernetes...
apt-get update && apt-get install -y apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update
apt-get install -y kubelet kubeadm kubectl
echo ' '

# configuring Kubernetes to use the same CGroup driver as Docker
# sed -i '/ExecStart=/a Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs"' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
sed -i '0,/ExecStart=/s//Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs"\n&/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
echo ' '

# Get the IP address that VirtualBox has given this VM
#IPADDR=`ifconfig enp0s8 | grep Mask | awk '{print $2}'| cut -f2 -d:`
IPADDR=$NODE_IP
echo This VM has IP address $IPADDR
echo ' '

# Set up Kubernetes
echo Set up kubernetes
NODENAME=$(hostname -s)
kubeadm init --apiserver-cert-extra-sans=$IPADDR --node-name $NODENAME
echo ' '

# Set up admin creds for the vagrant user
echo Copying credentials to /home/vagrant...
sudo --user=vagrant mkdir -p /home/vagrant/.kube
cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
chown $(id -u vagrant):$(id -g vagrant) /home/vagrant/.kube/config
# export KUBE_CONFIG=/home/vagrant/.kube/config
echo ' '

# allow running pods on the master node
echo allow running pods on the master node
kubectl --kubeconfig='/home/vagrant/.kube/config' taint nodes --all node-role.kubernetes.io/master-
echo ' '

# Install a pod network
echo install pod network
kubectl --kubeconfig='/home/vagrant/.kube/config' apply -f https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')
echo ' '

SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-16.04"
  # Specify your hostname if you like
  # config.vm.hostname = "name"

  # config.vm.provider :virtualbox do |v|
  #   v.check_guest_additions = false
  #   v.functional_vboxsf     = false
  # end

  config.vm.define "monovagk8s" do |monovagk8s|

    config.vm.provider :virtualbox do |vb|
      vb.memory = 1024
      vb.cpus = 1
      vb.customize ["modifyvm", :id, "--cpuexecutioncap", "85"]
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
      vb.customize ["modifyvm", :id, "--uartmode1", "disconnected" ]
    end

    config.vm.hostname = "mono-vag-kube"
    config.vm.synced_folder ".", "/vagrant", disabled: true
    # config.vm.network :private_network, type: "dhcp"
    $node_ip = "172.17.8.201"
    config.vm.network :private_network, ip: $node_ip

    # Configures provisioners.  
    config.vm.provision "docker"
    config.vm.provision :shell, inline: $swapoffScript, :run => 'always'
    config.vm.provision :shell, :path => "etc/install-dev-tools.sh"
    config.vm.provision :shell, inline: $script, env: {"NODE_IP" => $node_ip}
  end
end
